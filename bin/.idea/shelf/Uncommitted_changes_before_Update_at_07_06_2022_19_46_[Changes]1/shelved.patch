Index: src/model/Bono.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.Objects;\r\n\r\npublic class Bono {\r\n    private String nombreBono;\r\n    private LocalDate fechaInicio;\r\n    private LocalDate fechaFin;\r\n    private Double precio;\r\n\r\n    public Bono(String nombreBono, LocalDate fechaInicio, LocalDate fechaFin, Double precio) {\r\n        this.nombreBono = nombreBono;\r\n        this.fechaInicio = fechaInicio;\r\n        this.fechaFin = fechaFin;\r\n        this.precio = precio;\r\n    }\r\n\r\n    public String getNombreBono() {\r\n        return nombreBono;\r\n    }\r\n\r\n    public void setNombreBono(String nombreBono) {\r\n        this.nombreBono = nombreBono;\r\n    }\r\n\r\n    public LocalDate getFechaInicio() {\r\n        return fechaInicio;\r\n    }\r\n\r\n    public void setFechaInicio(LocalDate fechaInicio) {\r\n        this.fechaInicio = fechaInicio;\r\n    }\r\n\r\n    public LocalDate getFechaFin() {\r\n        return fechaFin;\r\n    }\r\n\r\n    public void setFechaFin(LocalDate fechaFin) {\r\n        this.fechaFin = fechaFin;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Bono{\" + \"nombreBono='\" + nombreBono + '\\'' + \", fechaInicio=\" + fechaInicio + \", fechaFin=\" + fechaFin + \", precio=\" + precio + '}';\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) return true;\r\n        if (!(o instanceof Bono)) return false;\r\n        Bono bono = (Bono) o;\r\n        return Objects.equals(nombreBono, bono.nombreBono) && Objects.equals(fechaInicio, bono.fechaInicio) && Objects.equals(fechaFin, bono.fechaFin) && Objects.equals(precio, bono.precio);\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(nombreBono, fechaInicio, fechaFin, precio);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/Bono.java b/src/model/Bono.java
--- a/src/model/Bono.java	
+++ b/src/model/Bono.java	
@@ -8,12 +8,14 @@
     private LocalDate fechaInicio;
     private LocalDate fechaFin;
     private Double precio;
+    private String estadoBono;
 
     public Bono(String nombreBono, LocalDate fechaInicio, LocalDate fechaFin, Double precio) {
         this.nombreBono = nombreBono;
         this.fechaInicio = fechaInicio;
         this.fechaFin = fechaFin;
         this.precio = precio;
+        this.estadoBono = "No pagado";
     }
 
     public String getNombreBono() {
@@ -40,6 +42,10 @@
         this.fechaFin = fechaFin;
     }
 
+    public void setEstadoBonoPagado() {
+        this.estadoBono = "Pagado";
+    }
+
     @Override
     public String toString() {
         return "Bono{" + "nombreBono='" + nombreBono + '\'' + ", fechaInicio=" + fechaInicio + ", fechaFin=" + fechaFin + ", precio=" + precio + '}';
Index: src/model/Abonado.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.util.Objects;\r\n\r\npublic class Abonado extends Cliente {\r\n\r\n    private static Estacionamiento datosEstacionamiento;\r\n    private Bono bono;\r\n\r\n    public Abonado(Identificador identificador, String matricula, String payMethod, Bono bono, Estacionamiento datosEstacionamiento) {\r\n        super(identificador, matricula, payMethod);\r\n        this.bono = bono;\r\n        Abonado.datosEstacionamiento = datosEstacionamiento;\r\n    }\r\n\r\n\r\n    public LocalDateTime getHoraEntrada() {\r\n        return getDatosEstacionamiento().getHoraEntrada();\r\n    }\r\n\r\n\r\n    @Override\r\n    public Identificador getIdentificador() {\r\n        return super.getIdentificador();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void setIdentificador(Identificador identificador) {\r\n        super.setIdentificador(identificador);\r\n    }\r\n\r\n    @Override\r\n    public String getMatricula() {\r\n        return super.getMatricula();\r\n    }\r\n\r\n    @Override\r\n    public void setMatricula(String matricula) {\r\n        super.setMatricula(matricula);\r\n    }\r\n\r\n    @Override\r\n    public String getPayMethod() {\r\n        return super.getPayMethod();\r\n    }\r\n\r\n    @Override\r\n    public void setPayMethod(String payMethod) {\r\n        super.setPayMethod(payMethod);\r\n    }\r\n\r\n    public Bono getBono() {\r\n        return bono;\r\n    }\r\n\r\n    public void setBono(Bono bono) {\r\n        this.bono = bono;\r\n    }\r\n\r\n    public static Estacionamiento getDatosEstacionamiento() {\r\n        return datosEstacionamiento;\r\n    }\r\n\r\n    public void setDatosEstacionamiento(Estacionamiento datosEstacionamiento) {\r\n        Abonado.datosEstacionamiento = datosEstacionamiento;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Abonado{\" + \"bono=\" + bono + \", identificador=\" + identificador + \", matricula='\" + matricula + '\\'' + \", payMethod='\" + payMethod + '\\'' + '}';\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) return true;\r\n        if (!(o instanceof Abonado)) return false;\r\n        Abonado abonado = (Abonado) o;\r\n        return Objects.equals(bono, abonado.bono);\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(bono);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/Abonado.java b/src/model/Abonado.java
--- a/src/model/Abonado.java	
+++ b/src/model/Abonado.java	
@@ -67,6 +67,10 @@
         Abonado.datosEstacionamiento = datosEstacionamiento;
     }
 
+
+    public void setEstadoBonoPagado() {
+        bono.setEstadoBonoPagado();
+    }
     @Override
     public String toString() {
         return "Abonado{" + "bono=" + bono + ", identificador=" + identificador + ", matricula='" + matricula + '\'' + ", payMethod='" + payMethod + '\'' + '}';
Index: src/repositoriesIMPL/AbonadoRepositoryIMPL.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package repositoriesIMPL;\r\n\r\nimport model.*;\r\nimport repositories.AbonadoRepository;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\n\r\npublic class AbonadoRepositoryIMPL implements AbonadoRepository {\r\n\r\n    @Override\r\n    public Abonado comprarBono(Cliente cliente, String bono) {\r\n        Abonado clienteAbonado = null;\r\n        switch (bono) {\r\n            case \"Diario\": {\r\n                clienteAbonado = new Abonado(cliente.getIdentificador(), cliente.getMatricula(), cliente.getPayMethod(), new Bono(bono, LocalDate.now(), LocalDate.now().plusDays(1), 15.00), Abonado.getDatosEstacionamiento());\r\n            }\r\n            break;\r\n            case \"Nocturno\": {\r\n                clienteAbonado = new Abonado(cliente.getIdentificador(), cliente.getMatricula(), cliente.getPayMethod(), new Bono(bono, LocalDate.now(), LocalDate.now().plusDays(1), 5.00), Abonado.getDatosEstacionamiento());\r\n            }\r\n            break;\r\n            case \"FinDeSemana\": {\r\n                clienteAbonado = new Abonado(cliente.getIdentificador(), cliente.getMatricula(), cliente.getPayMethod(), new Bono(bono, LocalDate.now(), LocalDate.now().plusDays(2), 20.00), Abonado.getDatosEstacionamiento());\r\n            }\r\n            break;\r\n        }\r\n\r\n        return clienteAbonado;\r\n    }\r\n\r\n    @Override\r\n    public void pagarBono(String metodoPago, Bono Bono) {\r\n    }\r\n\r\n    @Override\r\n    public ArrayList<Abonado> getAbonados(String bono) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public boolean comprobarEstadoBono(Abonado clienteAbonado) {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public EstacionamientoFinalizado finalizarEstacionamientoAbonado(Abonado clienteAbonado) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public Estacionamiento generarNuevoEstacionamientoAbonado(Abonado clienteAbonado) {\r\n        return null;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/repositoriesIMPL/AbonadoRepositoryIMPL.java b/src/repositoriesIMPL/AbonadoRepositoryIMPL.java
--- a/src/repositoriesIMPL/AbonadoRepositoryIMPL.java	
+++ b/src/repositoriesIMPL/AbonadoRepositoryIMPL.java	
@@ -24,13 +24,16 @@
                 clienteAbonado = new Abonado(cliente.getIdentificador(), cliente.getMatricula(), cliente.getPayMethod(), new Bono(bono, LocalDate.now(), LocalDate.now().plusDays(2), 20.00), Abonado.getDatosEstacionamiento());
             }
             break;
+
         }
 
+        pagarBono(clienteAbonado.getPayMethod(), clienteAbonado.getBono());
         return clienteAbonado;
     }
 
     @Override
-    public void pagarBono(String metodoPago, Bono Bono) {
+    public void pagarBono(String metodoPago, Bono bono) {
+        bono.setEstadoBonoPagado();
     }
 
     @Override
Index: src/tests/AbonadoRepositoryIMPLTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests;\r\n\r\nimport model.Abonado;\r\nimport model.Bono;\r\nimport model.Cliente;\r\nimport model.Estacionamiento;\r\nimport objectMother.ClienteOM;\r\nimport org.junit.Test;\r\nimport org.junit.jupiter.api.Assertions;\r\nimport repositoriesIMPL.AbonadoRepositoryIMPL;\r\n\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * AbonadoRepositoryIMPL Tester.\r\n *\r\n * @author <JesÃºs Macarro>\r\n * @version 1.0\r\n * @since <pre>jun. 1, 2022</pre>\r\n */\r\npublic class AbonadoRepositoryIMPLTest {\r\n    AbonadoRepositoryIMPL abonadoRepositoryIMPL = new AbonadoRepositoryIMPL();\r\n\r\n    /**\r\n     * Method: comprarBono(Cliente cliente, String bono)\r\n     */\r\n    @Test\r\n    public void testComprarBono() {\r\n        ArrayList<Cliente> clientes = ClienteOM.getClientes();\r\n        Cliente cliente = clientes.get(0);\r\n        Estacionamiento estacionamiento = new Estacionamiento(LocalDateTime.now(), cliente.getMatricula());\r\n        Bono bono = new Bono(\"Diario\", LocalDate.now(), LocalDate.now().plusDays(1), 15.00);\r\n\r\n        Abonado spectedAbonado = new Abonado(cliente.getIdentificador(), cliente.getMatricula(), cliente.getPayMethod(), bono, estacionamiento);\r\n        Abonado abonadoResultado = abonadoRepositoryIMPL.comprarBono(cliente, \"Diario\");\r\n        Assertions.assertEquals(spectedAbonado, abonadoResultado);\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Method: pagarBono(String metodoPago, Bono Bono)\r\n     */\r\n    @Test\r\n    public void testPagarBono() {\r\n//TODO: Test goes here... \r\n    }\r\n\r\n    /**\r\n     * Method: getAbonados(String bono)\r\n     */\r\n    @Test\r\n    public void testGetAbonados() {\r\n//TODO: Test goes here... \r\n    }\r\n\r\n    /**\r\n     * Method: comprobarEstadoBono(Abonado clienteAbonado)\r\n     */\r\n    @Test\r\n    public void testComprobarEstadoBono() {\r\n//TODO: Test goes here... \r\n    }\r\n\r\n    /**\r\n     * Method: finalizarEstacionamientoAbonado(Abonado clienteAbonado)\r\n     */\r\n    @Test\r\n    public void testFinalizarEstacionamientoAbonado() {\r\n//TODO: Test goes here... \r\n    }\r\n\r\n    /**\r\n     * Method: generarNuevoEstacionamientoAbonado(Abonado clienteAbonado)\r\n     */\r\n    @Test\r\n    public void testGenerarNuevoEstacionamientoAbonado() {\r\n//TODO: Test goes here... \r\n    }\r\n\r\n\r\n} \r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/tests/AbonadoRepositoryIMPLTest.java b/src/tests/AbonadoRepositoryIMPLTest.java
--- a/src/tests/AbonadoRepositoryIMPLTest.java	
+++ b/src/tests/AbonadoRepositoryIMPLTest.java	
@@ -36,8 +36,6 @@
         Abonado spectedAbonado = new Abonado(cliente.getIdentificador(), cliente.getMatricula(), cliente.getPayMethod(), bono, estacionamiento);
         Abonado abonadoResultado = abonadoRepositoryIMPL.comprarBono(cliente, "Diario");
         Assertions.assertEquals(spectedAbonado, abonadoResultado);
-
-
     }
 
     /**
@@ -45,7 +43,14 @@
      */
     @Test
     public void testPagarBono() {
-//TODO: Test goes here... 
+        ArrayList<Cliente> clientes = ClienteOM.getClientes();
+        Cliente cliente = clientes.get(0);
+        Estacionamiento estacionamiento = new Estacionamiento(LocalDateTime.now(), cliente.getMatricula());
+        Bono bono = new Bono("Diario", LocalDate.now(), LocalDate.now().plusDays(1), 15.00);
+        bono.setEstadoBonoPagado();
+        Abonado spectedAbonado = new Abonado(cliente.getIdentificador(), cliente.getMatricula(), cliente.getPayMethod(), bono, estacionamiento);
+        Abonado resultadoAbonado = abonadoRepositoryIMPL.comprarBono(cliente, "");
+//TODO: Test goes here...
     }
 
     /**
